(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/animations'), require('@angular/cdk/a11y'), require('@angular/common'), require('rxjs'), require('rxjs/operators'), require('@angular/material/button'), require('@angular/material/icon')) :
    typeof define === 'function' && define.amd ? define('@ngmodule/material-carousel', ['exports', '@angular/core', '@angular/animations', '@angular/cdk/a11y', '@angular/common', 'rxjs', 'rxjs/operators', '@angular/material/button', '@angular/material/icon'], factory) :
    (factory((global.ngmodule = global.ngmodule || {}, global.ngmodule['material-carousel'] = {}),global.ng.core,global.ng.animations,global.ng.cdk.a11y,global.ng.common,global.rxjs,global.rxjs.operators,global.ng.material.button,global.ng.material.icon));
}(this, (function (exports,core,animations,a11y,common,rxjs,operators,button,icon) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatCarouselSlideComponent = /** @class */ (function () {
        function MatCarouselSlideComponent() {
            this.overlayColor = '#00000040';
            this.hideOverlay = false;
            this.disabled = false; // implements ListKeyManagerOption
        }
        /**
         * @return {?}
         */
        MatCarouselSlideComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                if (this.image) {
                    this.image = "url(\"" + this.image + "\")";
                }
            };
        MatCarouselSlideComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'mat-carousel-slide',
                        template: "<ng-template>\n  <div class=\"carousel-slide\" [style.background-image]=\"image\">\n    <div class=\"carousel-slide-content\"><ng-content></ng-content></div>\n    <div\n      *ngIf=\"!hideOverlay\"\n      class=\"carousel-slide-overlay\"\n      [style.background-color]=\"overlayColor\"\n    ></div>\n  </div>\n</ng-template>\n",
                        styles: [".carousel-slide{width:100%;height:100%;position:absolute;z-index:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.carousel-slide-overlay{width:100%;height:100%;position:absolute;z-index:auto}.carousel-slide-content{width:100%;height:100%;position:absolute;z-index:1}"]
                    }] }
        ];
        MatCarouselSlideComponent.propDecorators = {
            image: [{ type: core.Input }],
            overlayColor: [{ type: core.Input }],
            hideOverlay: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            templateRef: [{ type: core.ViewChild, args: [core.TemplateRef,] }]
        };
        return MatCarouselSlideComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var Direction = {
        Left: 0,
        Right: 1,
        Index: 2,
    };
    Direction[Direction.Left] = 'Left';
    Direction[Direction.Right] = 'Right';
    Direction[Direction.Index] = 'Index';
    var MatCarouselComponent = /** @class */ (function () {
        function MatCarouselComponent(animationBuilder, renderer, platformId) {
            this.animationBuilder = animationBuilder;
            this.renderer = renderer;
            this.platformId = platformId;
            this.timings = '250ms ease-in';
            this.hideArrows = true;
            this.hideIndicators = true;
            this.color = 'accent';
            this.proportion = 25;
            this.useKeyboard = false;
            this.useMouseWheel = false;
            this._autoplay = true;
            this.autoplay$ = new rxjs.Subject();
            this.interval$ = new rxjs.BehaviorSubject(5000);
            this.slides$ = new rxjs.BehaviorSubject(null);
            this._maxWidth = 'auto';
            this.maxWidth$ = new rxjs.Subject();
            this._loop = true;
            this.loop$ = new rxjs.Subject();
            this._orientation = 'ltr';
            this.orientation$ = new rxjs.Subject();
            this.timerStop$ = new rxjs.Subject();
            this.destroy$ = new rxjs.Subject();
            this.playing = false;
        }
        Object.defineProperty(MatCarouselComponent.prototype, "autoplay", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.autoplay$.next(value);
                this._autoplay = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "interval", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.interval$.next(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "loop", {
            get: /**
             * @return {?}
             */ function () {
                return this._loop;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.loop$.next(value);
                this._loop = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "maxWidth", {
            get: /**
             * @return {?}
             */ function () {
                return this._maxWidth;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._maxWidth = value;
                this.maxWidth$.next();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "slides", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.slides$.next(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "orientation", {
            get: /**
             * @return {?}
             */ function () {
                return this._orientation;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.orientation$.next(value);
                this._orientation = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "currentIndex", {
            get: /**
             * @return {?}
             */ function () {
                if (this.listKeyManager) {
                    return this.listKeyManager.activeItemIndex;
                }
                return 0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatCarouselComponent.prototype, "currentSlide", {
            get: /**
             * @return {?}
             */ function () {
                if (this.listKeyManager) {
                    return this.listKeyManager.activeItem;
                }
                return null;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.listKeyManager = new a11y.ListKeyManager(this.slidesList)
                    .withVerticalOrientation(false)
                    .withHorizontalOrientation(this._orientation)
                    .withWrap(this._loop);
                this.listKeyManager.updateActiveItem(0);
                this.listKeyManager.change
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function () { return _this.playAnimation(); });
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.autoplay$.pipe(operators.takeUntil(this.destroy$)).subscribe(function (value) {
                    _this.stopTimer();
                    _this.startTimer(value);
                });
                this.interval$.pipe(operators.takeUntil(this.destroy$)).subscribe(function (value) {
                    _this.stopTimer();
                    _this.resetTimer(value);
                    _this.startTimer(_this._autoplay);
                });
                this.maxWidth$
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function () { return _this.slideTo(0); });
                this.loop$
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function (value) { return _this.listKeyManager.withWrap(value); });
                this.orientation$
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function (value) { return _this.listKeyManager.withHorizontalOrientation(value); });
                this.slides$
                    .pipe(operators.takeUntil(this.destroy$), operators.filter(function (value) { return value && value < _this.slidesList.length; }))
                    .subscribe(function (value) { return _this.resetSlides(value); });
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.destroy$.next();
                this.destroy$.complete();
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.next = /**
         * @return {?}
         */
            function () {
                this.goto(Direction.Right);
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.previous = /**
         * @return {?}
         */
            function () {
                this.goto(Direction.Left);
            };
        /**
         * @param {?} index
         * @return {?}
         */
        MatCarouselComponent.prototype.slideTo = /**
         * @param {?} index
         * @return {?}
         */
            function (index) {
                this.goto(Direction.Index, index);
            };
        /**
         * @param {?} event
         * @return {?}
         */
        MatCarouselComponent.prototype.onKeyUp = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (this.useKeyboard && !this.playing) {
                    this.listKeyManager.onKeydown(event);
                }
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.onMouseEnter = /**
         * @return {?}
         */
            function () {
                this.stopTimer();
            };
        /**
         * @return {?}
         */
        MatCarouselComponent.prototype.onMouseLeave = /**
         * @return {?}
         */
            function () {
                this.startTimer(this._autoplay);
            };
        /**
         * @param {?} event
         * @return {?}
         */
        MatCarouselComponent.prototype.onMouseWheel = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (this.useMouseWheel) {
                    event.preventDefault(); // prevent window to scroll
                    // prevent window to scroll
                    /** @type {?} */
                    var Δ = Math.sign(event.wheelDelta);
                    if (Δ < 0) {
                        this.next();
                    }
                    else if (Δ > 0) {
                        this.previous();
                    }
                }
            };
        /**
         * @param {?} event
         * @return {?}
         */
        MatCarouselComponent.prototype.onResize = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                // Reset carousel when window is resized
                // in order to avoid major glitches.
                this.slideTo(0);
            };
        /**
         * @param {?} event
         * @param {?} slideElem
         * @return {?}
         */
        MatCarouselComponent.prototype.onPan = /**
         * @param {?} event
         * @param {?} slideElem
         * @return {?}
         */
            function (event, slideElem) {
                /** @type {?} */
                var Δx = event.deltaX;
                if (this.isOutOfBounds()) {
                    Δx *= 0.2; // decelerate movement;
                }
                this.renderer.setStyle(slideElem, 'cursor', 'grabbing');
                this.renderer.setStyle(this.carouselList.nativeElement, 'transform', this.getTranslation(this.getOffset() + Δx));
            };
        /**
         * @param {?} event
         * @param {?} slideElem
         * @return {?}
         */
        MatCarouselComponent.prototype.onPanEnd = /**
         * @param {?} event
         * @param {?} slideElem
         * @return {?}
         */
            function (event, slideElem) {
                this.renderer.removeStyle(slideElem, 'cursor');
                if (!this.isOutOfBounds() &&
                    Math.abs(event.deltaX) > this.getWidth() * 0.25) {
                    if (event.deltaX <= 0) {
                        this.next();
                        return;
                    }
                    this.previous();
                    return;
                }
                this.playAnimation(); // slide back, don't change current index
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.isOutOfBounds = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var sign = this.orientation === 'rtl' ? -1 : 1;
                /** @type {?} */
                var left = sign *
                    (this.carouselList.nativeElement.getBoundingClientRect().left -
                        this.carouselList.nativeElement.offsetParent.getBoundingClientRect()
                            .left);
                /** @type {?} */
                var lastIndex = this.slidesList.length - 1;
                /** @type {?} */
                var width = -this.getWidth() * lastIndex;
                return ((this.listKeyManager.activeItemIndex === 0 && left >= 0) ||
                    (this.listKeyManager.activeItemIndex === lastIndex && left <= width));
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.isVisible = /**
         * @private
         * @return {?}
         */
            function () {
                if (!common.isPlatformBrowser(this.platformId)) {
                    return false;
                }
                /** @type {?} */
                var elem = this.carouselContainer.nativeElement;
                /** @type {?} */
                var docViewTop = window.pageYOffset;
                /** @type {?} */
                var docViewBottom = docViewTop + window.innerHeight;
                /** @type {?} */
                var elemOffset = elem.getBoundingClientRect();
                /** @type {?} */
                var elemTop = docViewTop + elemOffset.top;
                /** @type {?} */
                var elemBottom = elemTop + elemOffset.height;
                return elemBottom <= docViewBottom || elemTop >= docViewTop;
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.getOffset = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var offset = this.listKeyManager.activeItemIndex * this.getWidth();
                /** @type {?} */
                var sign = this.orientation === 'rtl' ? 1 : -1;
                return sign * offset;
            };
        /**
         * @private
         * @param {?} offset
         * @return {?}
         */
        MatCarouselComponent.prototype.getTranslation = /**
         * @private
         * @param {?} offset
         * @return {?}
         */
            function (offset) {
                return "translateX(" + offset + "px)";
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.getWidth = /**
         * @private
         * @return {?}
         */
            function () {
                return this.carouselContainer.nativeElement.clientWidth;
            };
        /**
         * @private
         * @param {?} direction
         * @param {?=} index
         * @return {?}
         */
        MatCarouselComponent.prototype.goto = /**
         * @private
         * @param {?} direction
         * @param {?=} index
         * @return {?}
         */
            function (direction, index) {
                if (!this.playing) {
                    /** @type {?} */
                    var rtl = this.orientation === 'rtl';
                    switch (direction) {
                        case Direction.Left:
                            return rtl
                                ? this.listKeyManager.setNextItemActive()
                                : this.listKeyManager.setPreviousItemActive();
                        case Direction.Right:
                            return rtl
                                ? this.listKeyManager.setPreviousItemActive()
                                : this.listKeyManager.setNextItemActive();
                        case Direction.Index:
                            return this.listKeyManager.setActiveItem(index);
                    }
                }
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.playAnimation = /**
         * @private
         * @return {?}
         */
            function () {
                var _this = this;
                /** @type {?} */
                var translation = this.getTranslation(this.getOffset());
                /** @type {?} */
                var factory = this.animationBuilder.build(animations.animate(this.timings, animations.style({ transform: translation })));
                /** @type {?} */
                var animation = factory.create(this.carouselList.nativeElement);
                animation.onStart(function () { return (_this.playing = true); });
                animation.onDone(function () {
                    _this.playing = false;
                    _this.renderer.setStyle(_this.carouselList.nativeElement, 'transform', translation);
                    animation.destroy();
                });
                animation.play();
            };
        /**
         * @private
         * @param {?} slides
         * @return {?}
         */
        MatCarouselComponent.prototype.resetSlides = /**
         * @private
         * @param {?} slides
         * @return {?}
         */
            function (slides) {
                this.slidesList.reset(this.slidesList.toArray().slice(0, slides));
            };
        /**
         * @private
         * @param {?} value
         * @return {?}
         */
        MatCarouselComponent.prototype.resetTimer = /**
         * @private
         * @param {?} value
         * @return {?}
         */
            function (value) {
                this.timer$ = rxjs.interval(value);
            };
        /**
         * @private
         * @param {?} autoplay
         * @return {?}
         */
        MatCarouselComponent.prototype.startTimer = /**
         * @private
         * @param {?} autoplay
         * @return {?}
         */
            function (autoplay) {
                var _this = this;
                if (!autoplay) {
                    return;
                }
                this.timer$
                    .pipe(operators.takeUntil(this.timerStop$), operators.takeUntil(this.destroy$), operators.filter(function () { return _this.isVisible(); }))
                    .subscribe(function () {
                    _this.listKeyManager.withWrap(true).setNextItemActive();
                    _this.listKeyManager.withWrap(_this.loop);
                });
            };
        /**
         * @private
         * @return {?}
         */
        MatCarouselComponent.prototype.stopTimer = /**
         * @private
         * @return {?}
         */
            function () {
                this.timerStop$.next();
            };
        MatCarouselComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'mat-carousel',
                        template: "<div\n  #carouselContainer\n  class=\"carousel\"\n  tabindex=\"0\"\n  [style.max-width]=\"maxWidth\"\n>\n  <ul\n    #carouselList\n    class=\"carousel-list\"\n    role=\"listbox\"\n    [style.flex-direction]=\"orientation === 'rtl' ? 'row-reverse' : 'row'\"\n  >\n    <li\n      #carouselSlide\n      *ngFor=\"let slide of slidesList\"\n      class=\"carousel-slide\"\n      role=\"option\"\n      [style.padding-bottom]=\"proportion + '%'\"\n      (panleft)=\"onPan($event, carouselSlide)\"\n      (panright)=\"onPan($event, carouselSlide)\"\n      (panend)=\"onPanEnd($event, carouselSlide)\"\n      (pancancel)=\"onPanEnd($event, carouselSlide)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"slide.templateRef\"></ng-container>\n    </li>\n  </ul>\n\n  <button\n    *ngIf=\"!hideArrows\"\n    mat-icon-button\n    tabindex=\"-1\"\n    [color]=\"color\"\n    [disabled]=\"!loop && currentIndex == 0\"\n    (click)=\"previous()\"\n  >\n    <mat-icon\n      *ngIf=\"svgIconOverrides?.arrowBack; else: defaultArrowBack\"\n      [svgIcon]=\"svgIconOverrides.arrowBack\"\n    ></mat-icon>\n    <ng-template #defaultArrowBack>\n      <mat-icon>arrow_back</mat-icon>\n    </ng-template>\n  </button>\n  <button\n    *ngIf=\"!hideArrows\"\n    mat-icon-button\n    tabindex=\"-1\"\n    [color]=\"color\"\n    [disabled]=\"!loop && currentIndex == slidesList.length - 1\"\n    (click)=\"next()\"\n  >\n    <mat-icon\n      *ngIf=\"svgIconOverrides?.arrowForward; else: defaultArrowForward\"\n      [svgIcon]=\"svgIconOverrides.arrowForward\"\n    ></mat-icon>\n    <ng-template #defaultArrowForward>\n      <mat-icon>arrow_forward</mat-icon>\n    </ng-template>\n  </button>\n\n  <div\n    *ngIf=\"!hideIndicators\"\n    class=\"carousel-indicators\"\n    tabindex=\"-1\"\n    [style.flex-direction]=\"orientation === 'rtl' ? 'row-reverse' : 'row'\"\n  >\n    <button\n      *ngFor=\"let slide of slidesList; let i = index\"\n      tabindex=\"-1\"\n      mat-mini-fab\n      [color]=\"color\"\n      [disabled]=\"i == currentIndex\"\n      (click)=\"slideTo(i)\"\n      (focus)=\"carouselContainer.focus()\"\n    ></button>\n  </div>\n</div>\n",
                        styles: [".carousel{width:100%;position:relative;overflow:hidden;outline:0}.carousel>button{position:absolute;z-index:1;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.carousel>button:first-of-type{left:30px}.carousel>button:last-of-type{right:30px}.carousel-list{width:100%;margin:0;padding:0;list-style:none;display:flex;position:relative}.carousel-slide{width:100%;height:0;display:flex;flex-shrink:0;position:relative}.carousel-slide:hover{cursor:-webkit-grab;cursor:grab}.carousel-indicators{display:flex;position:absolute;bottom:15px;z-index:1;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);outline:0}.carousel-indicators>button{width:10px;height:10px;margin:7.5px}"]
                    }] }
        ];
        /** @nocollapse */
        MatCarouselComponent.ctorParameters = function () {
            return [
                { type: animations.AnimationBuilder },
                { type: core.Renderer2 },
                { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] }
            ];
        };
        MatCarouselComponent.propDecorators = {
            timings: [{ type: core.Input }],
            svgIconOverrides: [{ type: core.Input }],
            autoplay: [{ type: core.Input }],
            interval: [{ type: core.Input }],
            loop: [{ type: core.Input }],
            hideArrows: [{ type: core.Input }],
            hideIndicators: [{ type: core.Input }],
            color: [{ type: core.Input }],
            maxWidth: [{ type: core.Input }],
            proportion: [{ type: core.Input }],
            slides: [{ type: core.Input }],
            useKeyboard: [{ type: core.Input }],
            useMouseWheel: [{ type: core.Input }],
            orientation: [{ type: core.Input }],
            slidesList: [{ type: core.ContentChildren, args: [MatCarouselSlideComponent,] }],
            carouselContainer: [{ type: core.ViewChild, args: ['carouselContainer',] }],
            carouselList: [{ type: core.ViewChild, args: ['carouselList',] }],
            onKeyUp: [{ type: core.HostListener, args: ['keyup', ['$event'],] }],
            onMouseEnter: [{ type: core.HostListener, args: ['mouseenter',] }],
            onMouseLeave: [{ type: core.HostListener, args: ['mouseleave',] }],
            onMouseWheel: [{ type: core.HostListener, args: ['mousewheel', ['$event'],] }],
            onResize: [{ type: core.HostListener, args: ['window:resize', ['$event'],] }]
        };
        return MatCarouselComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatCarouselModule = /** @class */ (function () {
        function MatCarouselModule() {
        }
        MatCarouselModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [MatCarouselComponent, MatCarouselSlideComponent],
                        imports: [common.CommonModule, button.MatButtonModule, icon.MatIconModule],
                        exports: [MatCarouselComponent, MatCarouselSlideComponent]
                    },] }
        ];
        return MatCarouselModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.MatCarouselComponent = MatCarouselComponent;
    exports.MatCarouselModule = MatCarouselModule;
    exports.MatCarouselSlideComponent = MatCarouselSlideComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdtb2R1bGUtbWF0ZXJpYWwtY2Fyb3VzZWwudW1kLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9Abmdtb2R1bGUvbWF0ZXJpYWwtY2Fyb3VzZWwvbGliL2Nhcm91c2VsLXNsaWRlL2Nhcm91c2VsLXNsaWRlLmNvbXBvbmVudC50cyIsIm5nOi8vQG5nbW9kdWxlL21hdGVyaWFsLWNhcm91c2VsL2xpYi9jYXJvdXNlbC5jb21wb25lbnQudHMiLCJuZzovL0BuZ21vZHVsZS9tYXRlcmlhbC1jYXJvdXNlbC9saWIvY2Fyb3VzZWwubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExpc3RLZXlNYW5hZ2VyT3B0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBUZW1wbGF0ZVJlZixcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBNYXRDYXJvdXNlbFNsaWRlIH0gZnJvbSAnLi9jYXJvdXNlbC1zbGlkZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21hdC1jYXJvdXNlbC1zbGlkZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9jYXJvdXNlbC1zbGlkZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2Nhcm91c2VsLXNsaWRlLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTWF0Q2Fyb3VzZWxTbGlkZUNvbXBvbmVudFxuICBpbXBsZW1lbnRzIExpc3RLZXlNYW5hZ2VyT3B0aW9uLCBNYXRDYXJvdXNlbFNsaWRlLCBPbkluaXQge1xuICBASW5wdXQoKSBwdWJsaWMgaW1hZ2U6IHN0cmluZztcbiAgQElucHV0KCkgcHVibGljIG92ZXJsYXlDb2xvciA9ICcjMDAwMDAwNDAnO1xuICBASW5wdXQoKSBwdWJsaWMgaGlkZU92ZXJsYXkgPSBmYWxzZTtcbiAgQElucHV0KCkgcHVibGljIGRpc2FibGVkID0gZmFsc2U7IC8vIGltcGxlbWVudHMgTGlzdEtleU1hbmFnZXJPcHRpb25cblxuICBAVmlld0NoaWxkKFRlbXBsYXRlUmVmKSBwdWJsaWMgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgcHVibGljIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmltYWdlKSB7XG4gICAgICB0aGlzLmltYWdlID0gYHVybChcIiR7dGhpcy5pbWFnZX1cIilgO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHsgYW5pbWF0ZSwgc3R5bGUsIEFuaW1hdGlvbkJ1aWxkZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IExpc3RLZXlNYW5hZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHsgaXNQbGF0Zm9ybUJyb3dzZXIgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgQ29tcG9uZW50LFxuICBDb250ZW50Q2hpbGRyZW4sXG4gIEVsZW1lbnRSZWYsXG4gIEhvc3RMaXN0ZW5lcixcbiAgSW5qZWN0LFxuICBJbnB1dCxcbiAgT25EZXN0cm95LFxuICBQTEFURk9STV9JRCxcbiAgUXVlcnlMaXN0LFxuICBSZW5kZXJlcjIsXG4gIFZpZXdDaGlsZFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRoZW1lUGFsZXR0ZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcbmltcG9ydCB7IGludGVydmFsLCBCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGZpbHRlciwgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQgeyBNYXRDYXJvdXNlbCwgT3JpZW50YXRpb24sIFN2Z0ljb25PdmVycmlkZXMgfSBmcm9tICcuL2Nhcm91c2VsJztcbmltcG9ydCB7IE1hdENhcm91c2VsU2xpZGVDb21wb25lbnQgfSBmcm9tICcuL2Nhcm91c2VsLXNsaWRlL2Nhcm91c2VsLXNsaWRlLmNvbXBvbmVudCc7XG5cbmVudW0gRGlyZWN0aW9uIHtcbiAgTGVmdCxcbiAgUmlnaHQsXG4gIEluZGV4XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21hdC1jYXJvdXNlbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jYXJvdXNlbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2Nhcm91c2VsLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTWF0Q2Fyb3VzZWxDb21wb25lbnRcbiAgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBBZnRlclZpZXdJbml0LCBNYXRDYXJvdXNlbCwgT25EZXN0cm95IHtcbiAgQElucHV0KCkgcHVibGljIHRpbWluZ3MgPSAnMjUwbXMgZWFzZS1pbic7XG4gIEBJbnB1dCgpIHB1YmxpYyBzdmdJY29uT3ZlcnJpZGVzOiBTdmdJY29uT3ZlcnJpZGVzO1xuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBzZXQgYXV0b3BsYXkodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLmF1dG9wbGF5JC5uZXh0KHZhbHVlKTtcbiAgICB0aGlzLl9hdXRvcGxheSA9IHZhbHVlO1xuICB9XG5cbiAgQElucHV0KClcbiAgcHVibGljIHNldCBpbnRlcnZhbCh2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5pbnRlcnZhbCQubmV4dCh2YWx1ZSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGxvb3AoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2xvb3A7XG4gIH1cbiAgQElucHV0KClcbiAgcHVibGljIHNldCBsb29wKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5sb29wJC5uZXh0KHZhbHVlKTtcbiAgICB0aGlzLl9sb29wID0gdmFsdWU7XG4gIH1cblxuICBASW5wdXQoKSBwdWJsaWMgaGlkZUFycm93cyA9IHRydWU7XG4gIEBJbnB1dCgpIHB1YmxpYyBoaWRlSW5kaWNhdG9ycyA9IHRydWU7XG4gIEBJbnB1dCgpIHB1YmxpYyBjb2xvcjogVGhlbWVQYWxldHRlID0gJ2FjY2VudCc7XG5cbiAgcHVibGljIGdldCBtYXhXaWR0aCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9tYXhXaWR0aDtcbiAgfVxuICBASW5wdXQoKVxuICBwdWJsaWMgc2V0IG1heFdpZHRoKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9tYXhXaWR0aCA9IHZhbHVlO1xuICAgIHRoaXMubWF4V2lkdGgkLm5leHQoKTtcbiAgfVxuXG4gIEBJbnB1dCgpIHB1YmxpYyBwcm9wb3J0aW9uID0gMjU7XG5cbiAgQElucHV0KClcbiAgcHVibGljIHNldCBzbGlkZXModmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuc2xpZGVzJC5uZXh0KHZhbHVlKTtcbiAgfVxuXG4gIEBJbnB1dCgpIHB1YmxpYyB1c2VLZXlib2FyZCA9IGZhbHNlO1xuICBASW5wdXQoKSBwdWJsaWMgdXNlTW91c2VXaGVlbCA9IGZhbHNlO1xuXG4gIHB1YmxpYyBnZXQgb3JpZW50YXRpb24oKTogT3JpZW50YXRpb24ge1xuICAgIHJldHVybiB0aGlzLl9vcmllbnRhdGlvbjtcbiAgfVxuICBASW5wdXQoKVxuICBwdWJsaWMgc2V0IG9yaWVudGF0aW9uKHZhbHVlOiBPcmllbnRhdGlvbikge1xuICAgIHRoaXMub3JpZW50YXRpb24kLm5leHQodmFsdWUpO1xuICAgIHRoaXMuX29yaWVudGF0aW9uID0gdmFsdWU7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGN1cnJlbnRJbmRleCgpOiBudW1iZXIge1xuICAgIGlmICh0aGlzLmxpc3RLZXlNYW5hZ2VyKSB7XG4gICAgICByZXR1cm4gdGhpcy5saXN0S2V5TWFuYWdlci5hY3RpdmVJdGVtSW5kZXg7XG4gICAgfVxuXG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgcHVibGljIGdldCBjdXJyZW50U2xpZGUoKTogTWF0Q2Fyb3VzZWxTbGlkZUNvbXBvbmVudCB7XG4gICAgaWYgKHRoaXMubGlzdEtleU1hbmFnZXIpIHtcbiAgICAgIHJldHVybiB0aGlzLmxpc3RLZXlNYW5hZ2VyLmFjdGl2ZUl0ZW07XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBAQ29udGVudENoaWxkcmVuKE1hdENhcm91c2VsU2xpZGVDb21wb25lbnQpIHB1YmxpYyBzbGlkZXNMaXN0OiBRdWVyeUxpc3Q8XG4gICAgTWF0Q2Fyb3VzZWxTbGlkZUNvbXBvbmVudFxuICA+O1xuICBAVmlld0NoaWxkKCdjYXJvdXNlbENvbnRhaW5lcicpIHByaXZhdGUgY2Fyb3VzZWxDb250YWluZXI6IEVsZW1lbnRSZWY8XG4gICAgSFRNTERpdkVsZW1lbnRcbiAgPjtcbiAgQFZpZXdDaGlsZCgnY2Fyb3VzZWxMaXN0JykgcHJpdmF0ZSBjYXJvdXNlbExpc3Q6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuICBwdWJsaWMgbGlzdEtleU1hbmFnZXI6IExpc3RLZXlNYW5hZ2VyPE1hdENhcm91c2VsU2xpZGVDb21wb25lbnQ+O1xuXG4gIHByaXZhdGUgX2F1dG9wbGF5ID0gdHJ1ZTtcbiAgcHJpdmF0ZSBhdXRvcGxheSQgPSBuZXcgU3ViamVjdDxib29sZWFuPigpO1xuXG4gIHByaXZhdGUgaW50ZXJ2YWwkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxudW1iZXI+KDUwMDApO1xuICBwcml2YXRlIHNsaWRlcyQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PG51bWJlcj4obnVsbCk7XG5cbiAgcHJpdmF0ZSBfbWF4V2lkdGggPSAnYXV0byc7XG4gIHByaXZhdGUgbWF4V2lkdGgkID0gbmV3IFN1YmplY3Q8bmV2ZXI+KCk7XG5cbiAgcHJpdmF0ZSBfbG9vcCA9IHRydWU7XG4gIHByaXZhdGUgbG9vcCQgPSBuZXcgU3ViamVjdDxib29sZWFuPigpO1xuXG4gIHByaXZhdGUgX29yaWVudGF0aW9uOiBPcmllbnRhdGlvbiA9ICdsdHInO1xuICBwcml2YXRlIG9yaWVudGF0aW9uJCA9IG5ldyBTdWJqZWN0PE9yaWVudGF0aW9uPigpO1xuXG4gIHByaXZhdGUgdGltZXIkOiBPYnNlcnZhYmxlPG51bWJlcj47XG4gIHByaXZhdGUgdGltZXJTdG9wJCA9IG5ldyBTdWJqZWN0PG5ldmVyPigpO1xuXG4gIHByaXZhdGUgZGVzdHJveSQgPSBuZXcgU3ViamVjdDxuZXZlcj4oKTtcbiAgcHJpdmF0ZSBwbGF5aW5nID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBhbmltYXRpb25CdWlsZGVyOiBBbmltYXRpb25CdWlsZGVyLFxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBASW5qZWN0KFBMQVRGT1JNX0lEKSBwcml2YXRlIHBsYXRmb3JtSWRcbiAgKSB7fVxuXG4gIHB1YmxpYyBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5saXN0S2V5TWFuYWdlciA9IG5ldyBMaXN0S2V5TWFuYWdlcih0aGlzLnNsaWRlc0xpc3QpXG4gICAgICAud2l0aFZlcnRpY2FsT3JpZW50YXRpb24oZmFsc2UpXG4gICAgICAud2l0aEhvcml6b250YWxPcmllbnRhdGlvbih0aGlzLl9vcmllbnRhdGlvbilcbiAgICAgIC53aXRoV3JhcCh0aGlzLl9sb29wKTtcblxuICAgIHRoaXMubGlzdEtleU1hbmFnZXIudXBkYXRlQWN0aXZlSXRlbSgwKTtcbiAgICB0aGlzLmxpc3RLZXlNYW5hZ2VyLmNoYW5nZVxuICAgICAgLnBpcGUodGFrZVVudGlsKHRoaXMuZGVzdHJveSQpKVxuICAgICAgLnN1YnNjcmliZSgoKSA9PiB0aGlzLnBsYXlBbmltYXRpb24oKSk7XG4gIH1cblxuICBwdWJsaWMgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHRoaXMuYXV0b3BsYXkkLnBpcGUodGFrZVVudGlsKHRoaXMuZGVzdHJveSQpKS5zdWJzY3JpYmUodmFsdWUgPT4ge1xuICAgICAgdGhpcy5zdG9wVGltZXIoKTtcbiAgICAgIHRoaXMuc3RhcnRUaW1lcih2YWx1ZSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmludGVydmFsJC5waXBlKHRha2VVbnRpbCh0aGlzLmRlc3Ryb3kkKSkuc3Vic2NyaWJlKHZhbHVlID0+IHtcbiAgICAgIHRoaXMuc3RvcFRpbWVyKCk7XG4gICAgICB0aGlzLnJlc2V0VGltZXIodmFsdWUpO1xuICAgICAgdGhpcy5zdGFydFRpbWVyKHRoaXMuX2F1dG9wbGF5KTtcbiAgICB9KTtcblxuICAgIHRoaXMubWF4V2lkdGgkXG4gICAgICAucGlwZSh0YWtlVW50aWwodGhpcy5kZXN0cm95JCkpXG4gICAgICAuc3Vic2NyaWJlKCgpID0+IHRoaXMuc2xpZGVUbygwKSk7XG5cbiAgICB0aGlzLmxvb3AkXG4gICAgICAucGlwZSh0YWtlVW50aWwodGhpcy5kZXN0cm95JCkpXG4gICAgICAuc3Vic2NyaWJlKHZhbHVlID0+IHRoaXMubGlzdEtleU1hbmFnZXIud2l0aFdyYXAodmFsdWUpKTtcblxuICAgIHRoaXMub3JpZW50YXRpb24kXG4gICAgICAucGlwZSh0YWtlVW50aWwodGhpcy5kZXN0cm95JCkpXG4gICAgICAuc3Vic2NyaWJlKHZhbHVlID0+IHRoaXMubGlzdEtleU1hbmFnZXIud2l0aEhvcml6b250YWxPcmllbnRhdGlvbih2YWx1ZSkpO1xuXG4gICAgdGhpcy5zbGlkZXMkXG4gICAgICAucGlwZShcbiAgICAgICAgdGFrZVVudGlsKHRoaXMuZGVzdHJveSQpLFxuICAgICAgICBmaWx0ZXIodmFsdWUgPT4gdmFsdWUgJiYgdmFsdWUgPCB0aGlzLnNsaWRlc0xpc3QubGVuZ3RoKVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZSh2YWx1ZSA9PiB0aGlzLnJlc2V0U2xpZGVzKHZhbHVlKSk7XG4gIH1cblxuICBwdWJsaWMgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5kZXN0cm95JC5uZXh0KCk7XG4gICAgdGhpcy5kZXN0cm95JC5jb21wbGV0ZSgpO1xuICB9XG5cbiAgcHVibGljIG5leHQoKTogdm9pZCB7XG4gICAgdGhpcy5nb3RvKERpcmVjdGlvbi5SaWdodCk7XG4gIH1cblxuICBwdWJsaWMgcHJldmlvdXMoKTogdm9pZCB7XG4gICAgdGhpcy5nb3RvKERpcmVjdGlvbi5MZWZ0KTtcbiAgfVxuXG4gIHB1YmxpYyBzbGlkZVRvKGluZGV4OiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLmdvdG8oRGlyZWN0aW9uLkluZGV4LCBpbmRleCk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdrZXl1cCcsIFsnJGV2ZW50J10pXG4gIHB1YmxpYyBvbktleVVwKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZCB7XG4gICAgaWYgKHRoaXMudXNlS2V5Ym9hcmQgJiYgIXRoaXMucGxheWluZykge1xuICAgICAgdGhpcy5saXN0S2V5TWFuYWdlci5vbktleWRvd24oZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlZW50ZXInKVxuICBwdWJsaWMgb25Nb3VzZUVudGVyKCk6IHZvaWQge1xuICAgIHRoaXMuc3RvcFRpbWVyKCk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdtb3VzZWxlYXZlJylcbiAgcHVibGljIG9uTW91c2VMZWF2ZSgpOiB2b2lkIHtcbiAgICB0aGlzLnN0YXJ0VGltZXIodGhpcy5fYXV0b3BsYXkpO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignbW91c2V3aGVlbCcsIFsnJGV2ZW50J10pXG4gIHB1YmxpYyBvbk1vdXNlV2hlZWwoZXZlbnQ6IE1vdXNlV2hlZWxFdmVudCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnVzZU1vdXNlV2hlZWwpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IC8vIHByZXZlbnQgd2luZG93IHRvIHNjcm9sbFxuICAgICAgY29uc3Qgw47ClCA9IE1hdGguc2lnbihldmVudC53aGVlbERlbHRhKTtcblxuICAgICAgaWYgKMOOwpQgPCAwKSB7XG4gICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgfSBlbHNlIGlmICjDjsKUID4gMCkge1xuICAgICAgICB0aGlzLnByZXZpb3VzKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignd2luZG93OnJlc2l6ZScsIFsnJGV2ZW50J10pXG4gIHB1YmxpYyBvblJlc2l6ZShldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICAvLyBSZXNldCBjYXJvdXNlbCB3aGVuIHdpbmRvdyBpcyByZXNpemVkXG4gICAgLy8gaW4gb3JkZXIgdG8gYXZvaWQgbWFqb3IgZ2xpdGNoZXMuXG4gICAgdGhpcy5zbGlkZVRvKDApO1xuICB9XG5cbiAgcHVibGljIG9uUGFuKGV2ZW50OiBhbnksIHNsaWRlRWxlbTogSFRNTEVsZW1lbnQpOiB2b2lkIHtcbiAgICBsZXQgw47ClHggPSBldmVudC5kZWx0YVg7XG4gICAgaWYgKHRoaXMuaXNPdXRPZkJvdW5kcygpKSB7XG4gICAgICDDjsKUeCAqPSAwLjI7IC8vIGRlY2VsZXJhdGUgbW92ZW1lbnQ7XG4gICAgfVxuXG4gICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZShzbGlkZUVsZW0sICdjdXJzb3InLCAnZ3JhYmJpbmcnKTtcbiAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKFxuICAgICAgdGhpcy5jYXJvdXNlbExpc3QubmF0aXZlRWxlbWVudCxcbiAgICAgICd0cmFuc2Zvcm0nLFxuICAgICAgdGhpcy5nZXRUcmFuc2xhdGlvbih0aGlzLmdldE9mZnNldCgpICsgw47ClHgpXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBvblBhbkVuZChldmVudDogYW55LCBzbGlkZUVsZW06IEhUTUxFbGVtZW50KTogdm9pZCB7XG4gICAgdGhpcy5yZW5kZXJlci5yZW1vdmVTdHlsZShzbGlkZUVsZW0sICdjdXJzb3InKTtcblxuICAgIGlmIChcbiAgICAgICF0aGlzLmlzT3V0T2ZCb3VuZHMoKSAmJlxuICAgICAgTWF0aC5hYnMoZXZlbnQuZGVsdGFYKSA+IHRoaXMuZ2V0V2lkdGgoKSAqIDAuMjVcbiAgICApIHtcbiAgICAgIGlmIChldmVudC5kZWx0YVggPD0gMCkge1xuICAgICAgICB0aGlzLm5leHQoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy5wcmV2aW91cygpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnBsYXlBbmltYXRpb24oKTsgLy8gc2xpZGUgYmFjaywgZG9uJ3QgY2hhbmdlIGN1cnJlbnQgaW5kZXhcbiAgfVxuXG4gIHByaXZhdGUgaXNPdXRPZkJvdW5kcygpOiBib29sZWFuIHtcbiAgICBjb25zdCBzaWduID0gdGhpcy5vcmllbnRhdGlvbiA9PT0gJ3J0bCcgPyAtMSA6IDE7XG4gICAgY29uc3QgbGVmdCA9XG4gICAgICBzaWduICpcbiAgICAgICh0aGlzLmNhcm91c2VsTGlzdC5uYXRpdmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLVxuICAgICAgICB0aGlzLmNhcm91c2VsTGlzdC5uYXRpdmVFbGVtZW50Lm9mZnNldFBhcmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgICAgICAgIC5sZWZ0KTtcbiAgICBjb25zdCBsYXN0SW5kZXggPSB0aGlzLnNsaWRlc0xpc3QubGVuZ3RoIC0gMTtcbiAgICBjb25zdCB3aWR0aCA9IC10aGlzLmdldFdpZHRoKCkgKiBsYXN0SW5kZXg7XG5cbiAgICByZXR1cm4gKFxuICAgICAgKHRoaXMubGlzdEtleU1hbmFnZXIuYWN0aXZlSXRlbUluZGV4ID09PSAwICYmIGxlZnQgPj0gMCkgfHxcbiAgICAgICh0aGlzLmxpc3RLZXlNYW5hZ2VyLmFjdGl2ZUl0ZW1JbmRleCA9PT0gbGFzdEluZGV4ICYmIGxlZnQgPD0gd2lkdGgpXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgaXNWaXNpYmxlKCk6IGJvb2xlYW4ge1xuICAgIGlmICghaXNQbGF0Zm9ybUJyb3dzZXIodGhpcy5wbGF0Zm9ybUlkKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0IGVsZW0gPSB0aGlzLmNhcm91c2VsQ29udGFpbmVyLm5hdGl2ZUVsZW1lbnQ7XG4gICAgY29uc3QgZG9jVmlld1RvcCA9IHdpbmRvdy5wYWdlWU9mZnNldDtcbiAgICBjb25zdCBkb2NWaWV3Qm90dG9tID0gZG9jVmlld1RvcCArIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICBjb25zdCBlbGVtT2Zmc2V0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCBlbGVtVG9wID0gZG9jVmlld1RvcCArIGVsZW1PZmZzZXQudG9wO1xuICAgIGNvbnN0IGVsZW1Cb3R0b20gPSBlbGVtVG9wICsgZWxlbU9mZnNldC5oZWlnaHQ7XG5cbiAgICByZXR1cm4gZWxlbUJvdHRvbSA8PSBkb2NWaWV3Qm90dG9tIHx8IGVsZW1Ub3AgPj0gZG9jVmlld1RvcDtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0T2Zmc2V0KCk6IG51bWJlciB7XG4gICAgY29uc3Qgb2Zmc2V0ID0gdGhpcy5saXN0S2V5TWFuYWdlci5hY3RpdmVJdGVtSW5kZXggKiB0aGlzLmdldFdpZHRoKCk7XG4gICAgY29uc3Qgc2lnbiA9IHRoaXMub3JpZW50YXRpb24gPT09ICdydGwnID8gMSA6IC0xO1xuICAgIHJldHVybiBzaWduICogb2Zmc2V0O1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRUcmFuc2xhdGlvbihvZmZzZXQ6IG51bWJlcik6IHN0cmluZyB7XG4gICAgcmV0dXJuIGB0cmFuc2xhdGVYKCR7b2Zmc2V0fXB4KWA7XG4gIH1cblxuICBwcml2YXRlIGdldFdpZHRoKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuY2Fyb3VzZWxDb250YWluZXIubmF0aXZlRWxlbWVudC5jbGllbnRXaWR0aDtcbiAgfVxuXG4gIHByaXZhdGUgZ290byhkaXJlY3Rpb246IERpcmVjdGlvbiwgaW5kZXg/OiBudW1iZXIpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMucGxheWluZykge1xuICAgICAgY29uc3QgcnRsID0gdGhpcy5vcmllbnRhdGlvbiA9PT0gJ3J0bCc7XG5cbiAgICAgIHN3aXRjaCAoZGlyZWN0aW9uKSB7XG4gICAgICAgIGNhc2UgRGlyZWN0aW9uLkxlZnQ6XG4gICAgICAgICAgcmV0dXJuIHJ0bFxuICAgICAgICAgICAgPyB0aGlzLmxpc3RLZXlNYW5hZ2VyLnNldE5leHRJdGVtQWN0aXZlKClcbiAgICAgICAgICAgIDogdGhpcy5saXN0S2V5TWFuYWdlci5zZXRQcmV2aW91c0l0ZW1BY3RpdmUoKTtcbiAgICAgICAgY2FzZSBEaXJlY3Rpb24uUmlnaHQ6XG4gICAgICAgICAgcmV0dXJuIHJ0bFxuICAgICAgICAgICAgPyB0aGlzLmxpc3RLZXlNYW5hZ2VyLnNldFByZXZpb3VzSXRlbUFjdGl2ZSgpXG4gICAgICAgICAgICA6IHRoaXMubGlzdEtleU1hbmFnZXIuc2V0TmV4dEl0ZW1BY3RpdmUoKTtcbiAgICAgICAgY2FzZSBEaXJlY3Rpb24uSW5kZXg6XG4gICAgICAgICAgcmV0dXJuIHRoaXMubGlzdEtleU1hbmFnZXIuc2V0QWN0aXZlSXRlbShpbmRleCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBwbGF5QW5pbWF0aW9uKCk6IHZvaWQge1xuICAgIGNvbnN0IHRyYW5zbGF0aW9uID0gdGhpcy5nZXRUcmFuc2xhdGlvbih0aGlzLmdldE9mZnNldCgpKTtcbiAgICBjb25zdCBmYWN0b3J5ID0gdGhpcy5hbmltYXRpb25CdWlsZGVyLmJ1aWxkKFxuICAgICAgYW5pbWF0ZSh0aGlzLnRpbWluZ3MsIHN0eWxlKHsgdHJhbnNmb3JtOiB0cmFuc2xhdGlvbiB9KSlcbiAgICApO1xuICAgIGNvbnN0IGFuaW1hdGlvbiA9IGZhY3RvcnkuY3JlYXRlKHRoaXMuY2Fyb3VzZWxMaXN0Lm5hdGl2ZUVsZW1lbnQpO1xuXG4gICAgYW5pbWF0aW9uLm9uU3RhcnQoKCkgPT4gKHRoaXMucGxheWluZyA9IHRydWUpKTtcbiAgICBhbmltYXRpb24ub25Eb25lKCgpID0+IHtcbiAgICAgIHRoaXMucGxheWluZyA9IGZhbHNlO1xuICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZShcbiAgICAgICAgdGhpcy5jYXJvdXNlbExpc3QubmF0aXZlRWxlbWVudCxcbiAgICAgICAgJ3RyYW5zZm9ybScsXG4gICAgICAgIHRyYW5zbGF0aW9uXG4gICAgICApO1xuICAgICAgYW5pbWF0aW9uLmRlc3Ryb3koKTtcbiAgICB9KTtcbiAgICBhbmltYXRpb24ucGxheSgpO1xuICB9XG5cbiAgcHJpdmF0ZSByZXNldFNsaWRlcyhzbGlkZXM6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuc2xpZGVzTGlzdC5yZXNldCh0aGlzLnNsaWRlc0xpc3QudG9BcnJheSgpLnNsaWNlKDAsIHNsaWRlcykpO1xuICB9XG5cbiAgcHJpdmF0ZSByZXNldFRpbWVyKHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLnRpbWVyJCA9IGludGVydmFsKHZhbHVlKTtcbiAgfVxuXG4gIHByaXZhdGUgc3RhcnRUaW1lcihhdXRvcGxheTogYm9vbGVhbik6IHZvaWQge1xuICAgIGlmICghYXV0b3BsYXkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnRpbWVyJFxuICAgICAgLnBpcGUoXG4gICAgICAgIHRha2VVbnRpbCh0aGlzLnRpbWVyU3RvcCQpLFxuICAgICAgICB0YWtlVW50aWwodGhpcy5kZXN0cm95JCksXG4gICAgICAgIGZpbHRlcigoKSA9PiB0aGlzLmlzVmlzaWJsZSgpKVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIHRoaXMubGlzdEtleU1hbmFnZXIud2l0aFdyYXAodHJ1ZSkuc2V0TmV4dEl0ZW1BY3RpdmUoKTtcbiAgICAgICAgdGhpcy5saXN0S2V5TWFuYWdlci53aXRoV3JhcCh0aGlzLmxvb3ApO1xuICAgICAgfSk7XG4gIH1cblxuICBwcml2YXRlIHN0b3BUaW1lcigpOiB2b2lkIHtcbiAgICB0aGlzLnRpbWVyU3RvcCQubmV4dCgpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE1hdEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5cbmltcG9ydCB7IE1hdENhcm91c2VsQ29tcG9uZW50IH0gZnJvbSAnLi9jYXJvdXNlbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWF0Q2Fyb3VzZWxTbGlkZUNvbXBvbmVudCB9IGZyb20gJy4vY2Fyb3VzZWwtc2xpZGUvY2Fyb3VzZWwtc2xpZGUuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTWF0Q2Fyb3VzZWxDb21wb25lbnQsIE1hdENhcm91c2VsU2xpZGVDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBNYXRCdXR0b25Nb2R1bGUsIE1hdEljb25Nb2R1bGVdLFxuICBleHBvcnRzOiBbTWF0Q2Fyb3VzZWxDb21wb25lbnQsIE1hdENhcm91c2VsU2xpZGVDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIE1hdENhcm91c2VsTW9kdWxlIHt9XG4iXSwibmFtZXMiOlsiQ29tcG9uZW50IiwiSW5wdXQiLCJWaWV3Q2hpbGQiLCJUZW1wbGF0ZVJlZiIsIlN1YmplY3QiLCJCZWhhdmlvclN1YmplY3QiLCJMaXN0S2V5TWFuYWdlciIsInRha2VVbnRpbCIsImZpbHRlciIsImlzUGxhdGZvcm1Ccm93c2VyIiwiYW5pbWF0ZSIsInN0eWxlIiwiaW50ZXJ2YWwiLCJBbmltYXRpb25CdWlsZGVyIiwiUmVuZGVyZXIyIiwiSW5qZWN0IiwiUExBVEZPUk1fSUQiLCJDb250ZW50Q2hpbGRyZW4iLCJIb3N0TGlzdGVuZXIiLCJOZ01vZHVsZSIsIkNvbW1vbk1vZHVsZSIsIk1hdEJ1dHRvbk1vZHVsZSIsIk1hdEljb25Nb2R1bGUiXSwibWFwcGluZ3MiOiI7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